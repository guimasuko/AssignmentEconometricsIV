coeff_long <- data.frame(variable = rep(colnames(coeff_lasso), each = nrow(coeff_lasso)),
row_index = rep(1:nrow(coeff_lasso), times = ncol(coeff_lasso)),
value = as.vector(as.matrix(coeff_lasso)))
coeff_long <- coeff_long %>% arrange(row_index)
groups <- groups %>% rename(variable="fred")
merged_data <- merge(coeff_long, groups, by = "variable", all.x = TRUE)
merged_data <- merged_data %>% arrange(row_index)
groupfinal_lasso <- merged_data %>% group_by(row_index, group) %>% summarise(total = sum(abs(value)))
wide_group_lasso <- groupfinal_lasso %>%
pivot_wider(names_from = group, values_from = total) %>% ungroup()
wide_group_lasso_rel <- wide_group_lasso %>%
mutate(across(-1, ~ . / rowSums(across(-1))))
wide_group_lasso_rel$dates <- as.Date(time(forecast1))
# Melt the dataframe to long format for plotting
melted_df <- melt(wide_group_lasso_rel, id.vars = "dates", variable.name = "Column")
melted_df <- melted_df %>% filter(Column != "row_index")
melted_df$Group <- as.integer(melted_df$Column) -1
melted_df$Group <- as.character(melted_df$Group)
# Create a stacked column plot
ggplot(data = melted_df,
aes(x = dates, y = value, fill = Group)) +
geom_area() +
labs(title = "LASSO - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_minimal()
# Computing variable importance for PC
# Get the alphas
alpha = as.matrix(pca$rotation[,1:n_pc])
#Get the lambdas (coefficients of the Factors) and the phis
lambdas = matrix(NA,261,6)
phis = matrix(NA,261,24)
for(i in 1:261 ){
size = length(coefficients_pc1[[i]])
lags = size - 1 - 6 # intercept and 6 factors
for(j in 1:6){
lambdas[i,j] <- coefficients_pc1[[i]][size-6+j]
}
for(l in 1:24){
phis[i,l] <- coefficients_pc1[[i]][l+1]
}
}
#Multiply alpha by lambdas to get "coefficient" of each variable in each window
importpc = as.data.frame(alpha %*% t(lambdas))
phist = as.data.frame(t(phis))
row_names <- paste("CPIAUCSL", seq(1, 24), sep = ".")
importpc$fred = rownames(importpc)
phist$fred = row_names
importpc <- rbind(importpc, phist)
groups <- groups %>% rename(fred="variable")
importpc = merge(importpc, groups, by="fred",  all.x = TRUE)
importpc$group <- ifelse(is.na(importpc$group), 9, importpc$group) # giving all lags of inflation group 9
# Get the number of lags - we use this in item A
lags_PC_AR <- table(colSums(!is.na(phist)))
lags_PC_AR <- data.frame(
lags = as.numeric(names(lags_PC_AR)),
count = as.numeric(lags_PC_AR)
)
lags_PC_AR = lags_PC_AR[1:13,]
lags_PC_AR <- lags_PC_AR %>% arrange(desc(count))
top_10_pc <- importpc %>%
rowwise() %>%
mutate(mean_abs = mean(abs(c_across(-c(fred, group))))) %>%
ungroup() %>%
select(fred, mean_abs) %>%
arrange(desc(mean_abs)) %>%
head(10)
top_10_pc <- top_10_pc %>% mutate(importance = 100* mean_abs/mean_abs[1]) %>% arrange(desc(importance))
ggplot(top_10_pc, aes(x = reorder(fred, -importance), y = importance)) +
geom_bar(stat = "identity") +
labs(title = "Variable Importance - PC",
x = "Variables",
y = "Importance") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
result <- importpc %>%
mutate(across(starts_with("V"), ~ abs(.), .names = "abs_{.col}")) %>%
group_by(group) %>%
summarise(across(starts_with("abs_V"), ~ sum(., na.rm = TRUE)))
pc_rel <- result %>%
mutate(across(starts_with("abs_V"), ~ . / sum(., na.rm = TRUE), .names = "rel_{.col}")) %>%
select(starts_with("rel_"))
pc_rel_transposed <- as.data.frame((t(pc_rel)))
pc_rel_transposed <- pc_rel_transposed %>%
mutate(date = as.Date(time(forecast1)))
importpc_long <- pc_rel_transposed %>%
pivot_longer(cols = starts_with("V"), names_to = "variable", values_to = "value")
importpc_long$Group <- as.character(gsub("\\D", "", importpc_long$variable))
ggplot(importpc_long, aes(x = date, y = value, fill = Group)) +
geom_area() +
labs(title = "AR_PC - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_minimal()
getwd()
read_csv('data/2021-12.csv')
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
scale_color_lancet() +
theme_minimal()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
scale_color_lancet()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() + scale_color_lancet()
library(ggsci) # color pallette
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_color_lancet()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_color_lancet(palette = c("lanonc"))
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_lancet(palette = c("lanonc"))
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_npg()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_jco()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_aaas()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_jco()
install.packages("wesanderson")
library(wesanderson)
theme_bw()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_jco()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_uchicago()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_futurama()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_npg()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_jama()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_ucscgb()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_d3()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_startrek()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_rickandmorty()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_tron()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_simpsons()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_nejm()
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_jco()
# Plot
cum_error %>%
gather(key = model, value = error, -date) %>%
ggplot(aes(x = date, y = error, color = model)) +
geom_line(size=0.8) +
geom_vline(xintercept = as.Date('2020-01-01'), linetype = 'dashed', size = 1)+
scale_color_lancet()+
labs(title = 'Cumulative squared errors', color = 'Model', y = NULL, x = NULL)
g1 <- cum_error %>%
gather(key = model, value = error, -date) %>%
ggplot(aes(x = date, y = error, color = model)) +
geom_line(size=0.8) +
geom_vline(xintercept = as.Date('2020-01-01'), linetype = 'dashed', size = 1)+
scale_color_lancet()+
labs(title = 'Cumulative squared errors', color = 'Model', y = NULL, x = NULL)
mse4 <- cum_error %>%
gather(key = model, value = error, -date) %>%
ggplot(aes(x = date, y = error, color = model)) +
geom_line(size=0.8) +
geom_vline(xintercept = as.Date('2020-01-01'), linetype = 'dashed', size = 1)+
scale_color_lancet()+
labs(title = 'Cumulative squared errors', color = 'Model', y = NULL, x = NULL)
# Plot
cum_error %>%
gather(key = model, value = error, -date) %>%
ggplot(aes(x = date, y = error, color = model)) +
geom_line(size=0.8) +
geom_vline(xintercept = as.Date('2020-01-01'), linetype = 'dashed', size = 1)+
scale_color_lancet()+
labs(title = 'Cumulative squared errors', color = 'Model', y = NULL, x = NULL)
cum_error %>%
gather(key = model, value = error, -date) %>%
ggplot(aes(x = date, y = error, color = model)) +
geom_line(size=0.8) +
geom_vline(xintercept = as.Date('2020-01-01'), linetype = 'dashed', size = 1)+
scale_color_lancet()+
labs(title = 'Cumulative squared errors', color = 'Model', y = NULL, x = NULL)
View(mse4)
ggsave("mse4.png")
# Computing variable importance for RIDGE
ridge_coeff <- as.data.frame(ridge_coeficients)
colnames(ridge_coeff) <- NULL
ridge_coeff <- ridge_coeff[2:109,]
ridge_names <- ridge_coeff %>% row.names(.)
names <- as.data.frame(ridge_names)
ridge_coeff <- cbind(names, ridge_coeff)
reg_data2 <- reg_data %>% select(-inflation.ahead)
std_deviations <- apply(reg_data2, 2, sd)
std_dev_df <- data.frame(Column_Names = colnames(reg_data2), Standard_Deviation = std_deviations)
std_dev_df <- std_dev_df %>% rename(ridge_names = "Column_Names")
ridge_coeff <- merge(ridge_coeff,std_dev_df, by = "ridge_names", all.x = TRUE )
ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL.1"]<- ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL"]
ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL.2"]<- ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL"]
ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL.3"]<- ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL"]
ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL.4"]<- ridge_coeff$Standard_Deviation[ridge_coeff$ridge_names == "CPIAUCSL"]
ridge_coeff_std <- ridge_coeff
for (col in 2:262) {
ridge_coeff_std[[col]] <- ridge_coeff_std[[col]] * ridge_coeff_std$Standard_Deviation
}
top10_ridge <- ridge_coeff_std %>%
mutate(Mean_Value = rowMeans(across(2:262, ~abs(.)))) %>%
select(ridge_names, Mean_Value) %>%
arrange(desc(Mean_Value)) %>%
head(10)
top10_ridge <- top10_ridge %>% mutate(importance = 100* Mean_Value/Mean_Value[1]) %>% arrange(desc(importance))
ggplot(top10_ridge, aes(x = reorder(ridge_names, -importance), y = importance)) +
geom_bar(stat = "identity") +
labs(title = "Variable Importance - RIDGE",
x = "Variables",
y = "Importance") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("ridge10.png")
#Get sum over groups
# Sum over cells based on groups
ridge_coeff_std <- ridge_coeff_std %>% rename(fred = "ridge_names")
ridge_coeff_std <- merge(ridge_coeff_std,groups, by = "fred", all.x = TRUE )
ridge_group <- ridge_coeff_std
for(i in 2:262){
for(j in 1:108){
ridge_group[j,i] <- abs(ridge_coeff_std[j,i])/sum(abs((ridge_coeff_std[,i])))
}
}
group_sums <- ridge_group %>%
group_by(group) %>%
summarize(across(2:262, ~sum(.)))
colnames(group_sums)[2:262] <- as.Date(time(forecast1))
group_sums_long <- pivot_longer(group_sums, cols = -group, names_to = "Time", values_to = "Value")
group_sums_long$Time <- as.integer(group_sums_long$Time)
group_sums_long$date <- as.Date(group_sums_long$Time)
ggplot(group_sums_long, aes(x = date, y = Value, fill = factor(group))) +
geom_area() +
labs(title = "RIDGE - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_bw() +
scale_fill_jco()
ggsave("ridgeshare.png")
# Computing variable importance for LASSO
# Create a matrix to store coefficients
coeff_lasso <- data.frame(matrix(ncol = ncol(reg_data2), nrow = length(forecast1)))
colnames(coeff_lasso) <- colnames(reg_data2)
#Retrieve coefficients and variable identifiers from lists
var_lasso = modify_depth(coefficients_lasso, 1, "i")
co_lasso = modify_depth(coefficients_lasso, 1, "x")
for (i in 1:length(forecast1)){
a = var_lasso[[i]] %>% unlist()
b = co_lasso[[i]] %>% unlist()
for (c in 2:length(a)){
coeff_lasso[i,a[c]]<-b[c]
}
}
rm(var_lasso, co_lasso)
#Multiply for sd
for (i in 1:length(forecast1)){
coeff_lasso[,i] = coeff_lasso[,i]*sd(reg_data2[,i])
}
coeff_lasso <- coeff_lasso %>% mutate_all(~ replace_na(., 0))
top10_lasso <-  colMeans(abs(coeff_lasso))
top_10_lasso <- coeff_lasso %>%
summarise_all(~ mean(abs(.))) %>%
pivot_longer(everything()) %>%
arrange(desc(value)) %>%
head(10)
top_10_lasso <- top_10_lasso %>% mutate(importance = 100* value/value[1]) %>% arrange(desc(importance))
ggplot(top_10_lasso, aes(x = reorder(name, -importance), y = importance)) +
geom_bar(stat = "identity") +
labs(title = "Variable Importance - LASSO",
x = "Variables",
y = "Importance") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("lasso10.png")
# Create a stacked column plot
ggplot(data = melted_df,
aes(x = dates, y = value, fill = Group)) +
geom_area() +
labs(title = "LASSO - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_minimal() +
scale_fill_jco()
ggsave("lassoshare.png")
top_10_pc <- importpc %>%
rowwise() %>%
mutate(mean_abs = mean(abs(c_across(-c(fred, group))))) %>%
ungroup() %>%
select(fred, mean_abs) %>%
arrange(desc(mean_abs)) %>%
head(10)
top_10_pc <- top_10_pc %>% mutate(importance = 100* mean_abs/mean_abs[1]) %>% arrange(desc(importance))
ggplot(top_10_pc, aes(x = reorder(fred, -importance), y = importance)) +
geom_bar(stat = "identity") +
labs(title = "Variable Importance - PC",
x = "Variables",
y = "Importance") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("pcar10.png")
ggplot(importpc_long, aes(x = date, y = value, fill = Group)) +
geom_area() +
labs(title = "AR_PC - Group Importance over Time", x = "Time", y = "Relative Values") +
scale_fill_discrete(name = "Groups") +
theme_minimal()  +
scale_fill_jco()
ggsave("arpcshare.png")
knit_with_parameters("C:/Users/Caio Garzeri/OneDrive - puc-rio.br/Econometria IV/AssignmentEconometricsIV/code/Trabalho_Econo4_Q2.Rmd")
# Save data for Question 3
save(data, inflation, forecasts, file = 'data/Q2_objects.Rda')
write.csv( forecasts, file = "output/forecasts.csv" )
write.csv( cum_error, file = "output/cum_error.csv" )
forecasts
cum_error
write.csv( forecasts, file = "C:\\Users\\Caio Garzeri\\OneDrive - puc-rio.br\\Econometria IV\\AssignmentEconometricsIV\\output\\forecasts.csv" )
write.csv( cum_error, file = "C:\\Users\\Caio Garzeri\\OneDrive - puc-rio.br\\Econometria IV\\AssignmentEconometricsIV\\output\\cum_error.csv" )
# Save data for Question 3
save(data, inflation, forecasts, file = 'C:\\Users\\Caio Garzeri\\OneDrive - puc-rio.br\\Econometria IV\\AssignmentEconometricsIV\\output\\Q2_objects.Rda')
View(coeff_lasso)
# Computing variable importance for LASSO
# Create a matrix to store coefficients
coeff_lasso <- data.frame(matrix(ncol = ncol(reg_data2), nrow = length(forecast1)))
colnames(coeff_lasso) <- colnames(reg_data2)
#Retrieve coefficients and variable identifiers from lists
var_lasso = modify_depth(coefficients_lasso, 1, "i")
co_lasso = modify_depth(coefficients_lasso, 1, "x")
for (i in 1:length(forecast1)){
a = var_lasso[[i]] %>% unlist()
b = co_lasso[[i]] %>% unlist()
for (c in 2:length(a)){
coeff_lasso[i,a[c]]<-b[c]
}
}
rm(var_lasso, co_lasso)
#Multiply for sd
for (i in 1:length(forecast1)){
coeff_lasso[,i] = coeff_lasso[,i]*sd(reg_data2[,i])
}
View(coeff_lasso)
# Computing variable importance for LASSO
# Create a matrix to store coefficients
coeff_lasso <- data.frame(matrix(ncol = ncol(reg_data2), nrow = length(forecast1)))
colnames(coeff_lasso) <- colnames(reg_data2)
#Retrieve coefficients and variable identifiers from lists
var_lasso = modify_depth(coefficients_lasso, 1, "i")
co_lasso = modify_depth(coefficients_lasso, 1, "x")
for (i in 1:length(forecast1)){
a = var_lasso[[i]] %>% unlist()
b = co_lasso[[i]] %>% unlist()
for (c in 2:length(a)){
coeff_lasso[i,a[c]]<-b[c]
}
}
rm(var_lasso, co_lasso)
#Multiply for sd
for (i in 1:length(forecast1)){
coeff_lasso[,i] = coeff_lasso[,i]*sd(reg_data2[,i])
}
View(coeff_lasso)
# Computing variable importance for LASSO
# Create a matrix to store coefficients
coeff_lasso <- data.frame(matrix(ncol = ncol(reg_data2), nrow = length(forecast1)))
colnames(coeff_lasso) <- colnames(reg_data2)
#Retrieve coefficients and variable identifiers from lists
var_lasso = modify_depth(coefficients_lasso, 1, "i")
co_lasso = modify_depth(coefficients_lasso, 1, "x")
for (i in 1:length(forecast1)){
a = var_lasso[[i]] %>% unlist()
b = co_lasso[[i]] %>% unlist()
for (c in 2:length(a)){
coeff_lasso[i,a[c]]<-b[c]
}
}
rm(var_lasso, co_lasso)
#Multiply for sd
for (i in 1:length(forecast1)){
coeff_lasso[,i] = coeff_lasso[,i]*sd(reg_data2[,i])
}
coeff_lasso <- coeff_lasso %>% mutate_all(~ replace_na(., 0))
top10_lasso <-  colMeans(abs(coeff_lasso))
top_10_lasso <- coeff_lasso %>%
summarise_all(~ mean(abs(.))) %>%
pivot_longer(everything()) %>%
arrange(desc(value)) %>%
head(10)
top_10_lasso <- top_10_lasso %>% mutate(importance = 100* value/value[1]) %>% arrange(desc(importance))
ggplot(top_10_lasso, aes(x = reorder(name, -importance), y = importance)) +
geom_bar(stat = "identity") +
labs(title = "Variable Importance - LASSO",
x = "Variables",
y = "Importance") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Computing variable importance for LASSO
# Create a matrix to store coefficients
coeff_lasso <- data.frame(matrix(ncol = ncol(reg_data2), nrow = length(forecast1)))
colnames(coeff_lasso) <- colnames(reg_data2)
#Retrieve coefficients and variable identifiers from lists
var_lasso = modify_depth(coefficients_lasso, 1, "i")
co_lasso = modify_depth(coefficients_lasso, 1, "x")
for (i in 1:length(forecast1)){
a = var_lasso[[i]] %>% unlist()
b = co_lasso[[i]] %>% unlist()
for (c in 2:length(a)){
coeff_lasso[i,a[c]]<-b[c]
}
}
rm(var_lasso, co_lasso)
#Multiply for sd
for (i in 1:length(forecast1)){
coeff_lasso[,i] = coeff_lasso[,i]*sd(reg_data2[,i])
}
coeff_lasso <- coeff_lasso %>% mutate_all(~ replace_na(., 0))
top10_lasso <-  colMeans(abs(coeff_lasso))
top_10_lasso <- coeff_lasso %>%
summarise_all(~ mean(abs(.))) %>%
pivot_longer(everything()) %>%
arrange(desc(value)) %>%
head(10)
top_10_lasso <- top_10_lasso %>% mutate(importance = 100* value/value[1]) %>% arrange(desc(importance))
ggplot(top_10_lasso, aes(x = reorder(name, -importance), y = importance)) +
geom_bar(stat = "identity") +
labs(title = "Variable Importance - LASSO",
x = "Variables",
y = "Importance") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
