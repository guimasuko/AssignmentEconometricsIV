Yobs3 <- dataYlag3[(a+rolling_window-1 +1 +1),]
X4 <- dataXlag4[a:(a+rolling_window-1),]
Y4 <- dataYlag4[a:(a+rolling_window-1),]
Xnew4 <- dataXlag4[(a+rolling_window-1 +1),]
Yobs4 <- dataYlag4[(a+rolling_window-1 +1),]
#estimate LASSO and predict for each model
print("Starting Estimation for 1 lag")
iclasso <- ic.glmnet(X1, Y1, crit="bic", alpha=1)
lasso <- glmnet(X1, Y1, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew1), s=iclasso$lambda)
MSELASSO = (Yobs1 - pred)^2
MSE_LASSO$lag1[a] <- MSELASSO
fcst_LASSO$lag1[a] <- pred
print("Starting Estimation for 2 lags")
iclasso <- ic.glmnet(X2, Y2, crit="bic", alpha=1)
lasso <- glmnet(X2, Y2, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew2), s=iclasso$lambda)
MSELASSO = (Yobs2 - pred)^2
MSE_LASSO$lag2[a] <- MSELASSO
fcst_LASSO$lag2[a] <- pred
print("Starting Estimation for 3 lags")
iclasso <- ic.glmnet(X3, Y3, crit="bic", alpha=1)
lasso <- glmnet(X3, Y3, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew3), s=iclasso$lambda)
MSELASSO = (Yobs3 - pred)^2
MSE_LASSO$lag3[a] <- MSELASSO
fcst_LASSO$lag3[a] <- pred
print("Starting Estimation for 4 lags")
iclasso <- ic.glmnet(X4, Y4, crit="bic", alpha=1)
lasso <- glmnet(X4, Y4, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew4), s=iclasso$lambda)
MSELASSO = (Yobs4 - pred)^2
MSE_LASSO$lag4[a] <- MSELASSO
fcst_LASSO$lag4[a] <- pred
}
ic.glmnet = function (x, y, crit=c("bic","aic","aicc","hqc"),alpha = 1,...)
{
if (is.matrix(x) == FALSE) {
x = data.matrix(x)
}
if (is.vector(y) == FALSE) {
y = as.vector(y)
}
crit=match.arg(crit)
n=length(y)
model = glmnet(x = x, y = y,alpha = alpha, ...)
coef = coef(model)
lambda = model$lambda
df = model$df
if(alpha==0){
xs = scale(x)
I = diag(ncol(x))
xx = t(xs)%*%xs
for(i in 1:length(lambda)){
aux = solve(xx + I*lambda[i])
df[i] = sum(diag(xs%*%aux%*%t(xs)))
}
}
yhat=cbind(1,x)%*%coef
residuals = (y- yhat)
mse = colMeans(residuals^2)
sse = colSums(residuals^2)
nvar = df + 1
bic = n*log(mse)+nvar*log(n)
aic = n*log(mse)+2*nvar
aicc = aic+(2*nvar*(nvar+1))/(n-nvar-1)
hqc = n*log(mse)+2*nvar*log(log(n))
sst = (n-1)*var(y)
r2 = 1 - (sse/sst)
adjr2 = (1 - (1 - r2) * (n - 1)/(nrow(x) - nvar - 1))
crit=switch(crit,bic=bic,aic=aic,aicc=aicc,hqc=hqc)
selected=best.model = which(crit == min(crit))
ic=c(bic=bic[selected],aic=aic[selected],aicc=aicc[selected],hqc=hqc[selected])
result=list(coefficients=coef[,selected],ic=ic,lambda = lambda[selected], nvar=nvar[selected],
glmnet=model,residuals=residuals[,selected],fitted.values=yhat[,selected],ic.range=crit, df = df, call = match.call())
class(result)="ic.glmnet"
return(result)
}
MSE_LASSO <- data.frame (date = data0$sasdate[(length(data0$sasdate)-256):length(data0$sasdate)],
lag1 = numeric((nrow(dataYlag4) - rolling_window)),
lag2 = numeric((nrow(dataYlag4) - rolling_window)),
lag3 = numeric((nrow(dataYlag4) - rolling_window)),
lag4 = numeric((nrow(dataYlag4) - rolling_window)))
fcst_LASSO <-  data.frame (date = data0$sasdate[(length(data0$sasdate)-256):length(data0$sasdate)],
lag1 = numeric((nrow(dataYlag4) - rolling_window)),
lag2 = numeric((nrow(dataYlag4) - rolling_window)),
lag3 = numeric((nrow(dataYlag4) - rolling_window)),
lag4 = numeric((nrow(dataYlag4) - rolling_window)))
#LASSO
for(a in 1:(nrow(dataYlag4) - rolling_window)){
print(paste0("Starting window ", a ))
#slice data
X1 <- dataXlag1[(a+3):(a+rolling_window-1 +3),]
Y1 <- dataYlag1[(a+3):(a+rolling_window-1 +3),]
Xnew1 <- dataXlag1[(a+rolling_window-1 +3 + 1),]
Yobs1 <- dataYlag1[(a+rolling_window-1 +3 +1),]
X2 <- dataXlag2[(a+2):(a+rolling_window-1 +2),]
Y2 <- dataYlag2[(a+2):(a+rolling_window-1 +2),]
Xnew2 <- dataXlag2[(a+rolling_window-1 +2 +1),]
Yobs2 <- dataYlag2[(a+rolling_window-1 +2 +1),,]
X3 <- dataXlag3[(a+1):(a+rolling_window-1 +1),]
Y3 <- dataYlag3[(a+1):(a+rolling_window-1 +1),]
Xnew3 <- dataXlag3[(a+rolling_window-1 +1 +1),]
Yobs3 <- dataYlag3[(a+rolling_window-1 +1 +1),]
X4 <- dataXlag4[a:(a+rolling_window-1),]
Y4 <- dataYlag4[a:(a+rolling_window-1),]
Xnew4 <- dataXlag4[(a+rolling_window-1 +1),]
Yobs4 <- dataYlag4[(a+rolling_window-1 +1),]
#estimate LASSO and predict for each model
print("Starting Estimation for 1 lag")
iclasso <- ic.glmnet(X1, Y1, crit="bic", alpha=1)
lasso <- glmnet(X1, Y1, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew1), s=iclasso$lambda)
MSELASSO = (Yobs1 - pred)^2
MSE_LASSO$lag1[a] <- MSELASSO
fcst_LASSO$lag1[a] <- pred
print("Starting Estimation for 2 lags")
iclasso <- ic.glmnet(X2, Y2, crit="bic", alpha=1)
lasso <- glmnet(X2, Y2, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew2), s=iclasso$lambda)
MSELASSO = (Yobs2 - pred)^2
MSE_LASSO$lag2[a] <- MSELASSO
fcst_LASSO$lag2[a] <- pred
print("Starting Estimation for 3 lags")
iclasso <- ic.glmnet(X3, Y3, crit="bic", alpha=1)
lasso <- glmnet(X3, Y3, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew3), s=iclasso$lambda)
MSELASSO = (Yobs3 - pred)^2
MSE_LASSO$lag3[a] <- MSELASSO
fcst_LASSO$lag3[a] <- pred
print("Starting Estimation for 4 lags")
iclasso <- ic.glmnet(X4, Y4, crit="bic", alpha=1)
lasso <- glmnet(X4, Y4, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew4), s=iclasso$lambda)
MSELASSO = (Yobs4 - pred)^2
MSE_LASSO$lag4[a] <- MSELASSO
fcst_LASSO$lag4[a] <- pred
}
MSE_LASSO <- MSE_LASSO %>% mutate(lag1cum = cumsum(lag1),
lag2cum = cumsum(lag2),
lag3cum = cumsum(lag3),
lag4cum = cumsum(lag4))
MSE_LASSO$date <- as.Date(MSE_LASSO$date, format = "%m/%d/%Y")
MSE_LASSO %>% ggplot(aes(x = date)) +
geom_line(aes(y = lag1cum, color = "1lag"), size = 1) +
geom_line(aes(y = lag2cum, color = "2lags"), size = 1) +
geom_line(aes(y = lag3cum, color = "3lags"), size = 1) +
geom_line(aes(y = lag4cum, color = "4lags"), size = 1) +
labs(x = "Date", y = "MSE", title = "Cumulative MSE - LASSO diff lags") +
scale_color_manual(values = c("1lag" = "blue", "2lags" = "red", "3lags" = "green", "4lags" = "yellow")) +
theme_minimal()
library(tidyverse)
library(ggplot2)
library(stargazer)
library(kableExtra)
library(gridExtra)
library(ggsci) # color pallette
library(tictoc)
library(lubridate) # for handling dates
library(zoo)
library(dynlm) # for time series regressions
library(forecast) # for the improved Pacf function
library(glmnet)
# Configurações
theme_set(theme_linedraw())
theme_update(title = element_text(family = 'serif'),
legend.text = element_text(family = 'serif'))
# Import the data
#raw_data = read.csv('/home/caio/Documentos/lasso/2021-12.csv')
raw_data = read.csv("C:\\Users\\Caio Garzeri\\OneDrive - puc-rio.br\\Econometria IV\\2021-12.csv")
data0 = raw_data[-1,] %>% select_if(~ !any(is.na(.)))
transformation = raw_data[1,]
# Data transformations based on the FRED transformation codes
data = data0 %>% select(-sasdate) %>%
rename(SP500="S.P.500", SPINDUST="S.P..indust") %>%
BVAR::fred_transform(type = 'fred_md') %>%
bind_cols(tibble(date = data0$sasdate[3:length(data0$sasdate)])) %>%
mutate(date = as.Date(date, format = '%m/%d/%Y'))
# For the CPI, we transform into an inflation series
data = mutate(data, CPIAUCSL = 100*(diff(data0$CPIAUCSL, differences = 1)/data0$CPIAUCSL[-1])[-1])
#RW
rolling_window <- 492
#Create dataframes with lags
datalag1 <- data %>% select(-c(date))
datalag2 <- data %>% select(-c(date))
datalag3 <- data %>% select(-c(date))
datalag4 <- data %>% select(-c(date))
for (col_name in names(data)) {
lvar1 <- lag(data[[col_name]], 1) ;lvar2 <- lag(data[[col_name]], 2); lvar3 <- lag(data[[col_name]], 3); lvar4 <- lag(data[[col_name]], 4)
colnamelag1 <- paste0(col_name, "_lag1"); colnamelag2 <- paste0(col_name, "_lag2"); colnamelag3 <- paste0(col_name, "_lag3"); colnamelag4 <- paste0(col_name, "_lag4")
datalag1[colnamelag1] <- lvar1
datalag2[colnamelag1] <- lvar1 ; datalag2[colnamelag2] <- lvar2
datalag3[colnamelag1] <- lvar1 ; datalag3[colnamelag2] <- lvar2; datalag3[colnamelag3] <- lvar3
datalag4[colnamelag1] <- lvar1 ; datalag4[colnamelag2] <- lvar2; datalag4[colnamelag3] <- lvar3 ; datalag4[colnamelag4] <- lvar4
}
datalag1 <- na.omit(datalag1) ; dataXlag1 <- datalag1 %>% select(-c(CPIAUCSL)) ; dataYlag1 <- datalag1 %>% select(CPIAUCSL)
datalag2 <- na.omit(datalag2) ; dataXlag2 <- datalag2 %>% select(-c(CPIAUCSL)) ; dataYlag2 <- datalag2 %>% select(CPIAUCSL)
datalag3 <- na.omit(datalag3) ; dataXlag3 <- datalag3 %>% select(-c(CPIAUCSL)) ; dataYlag3 <- datalag3 %>% select(CPIAUCSL)
datalag4 <- na.omit(datalag4) ; dataXlag4 <- datalag4 %>% select(-c(CPIAUCSL)) ; dataYlag4 <- datalag4 %>% select(CPIAUCSL)
View(dataYlag1)
View(dataYlag2)
View(dataXlag3)
View(dataXlag4)
View(dataYlag3)
View(dataYlag4)
MSE_LASSO <- data.frame (date = data0$sasdate[(length(data0$sasdate)-256):length(data0$sasdate)],
lag1 = numeric((nrow(dataYlag4) - rolling_window)),
lag2 = numeric((nrow(dataYlag4) - rolling_window)),
lag3 = numeric((nrow(dataYlag4) - rolling_window)),
lag4 = numeric((nrow(dataYlag4) - rolling_window)))
fcst_LASSO <-  data.frame (date = data0$sasdate[(length(data0$sasdate)-256):length(data0$sasdate)],
lag1 = numeric((nrow(dataYlag4) - rolling_window)),
lag2 = numeric((nrow(dataYlag4) - rolling_window)),
lag3 = numeric((nrow(dataYlag4) - rolling_window)),
lag4 = numeric((nrow(dataYlag4) - rolling_window)))
a=1
#slice data
X1 <- dataXlag1[(a+3):(a+rolling_window-1 +3),]
Y1 <- dataYlag1[(a+3):(a+rolling_window-1 +3),]
Xnew1 <- dataXlag1[(a+rolling_window-1 +3 + 1),]
Yobs1 <- dataYlag1[(a+rolling_window-1 +3 +1),]
View(X1)
View(Xnew1)
View(dataXlag1)
ic.glmnet = function (x, y, crit=c("bic","aic","aicc","hqc"),alpha = 1,...)
{
if (is.matrix(x) == FALSE) {
x = data.matrix(x)
}
if (is.vector(y) == FALSE) {
y = as.vector(y)
}
crit=match.arg(crit)
n=length(y)
model = glmnet(x = x, y = y,alpha = alpha, ...)
coef = coef(model)
lambda = model$lambda
df = model$df
if(alpha==0){
xs = scale(x)
I = diag(ncol(x))
xx = t(xs)%*%xs
for(i in 1:length(lambda)){
aux = solve(xx + I*lambda[i])
df[i] = sum(diag(xs%*%aux%*%t(xs)))
}
}
yhat=cbind(1,x)%*%coef
residuals = (y- yhat)
mse = colMeans(residuals^2)
sse = colSums(residuals^2)
nvar = df + 1
bic = n*log(mse)+nvar*log(n)
aic = n*log(mse)+2*nvar
aicc = aic+(2*nvar*(nvar+1))/(n-nvar-1)
hqc = n*log(mse)+2*nvar*log(log(n))
sst = (n-1)*var(y)
r2 = 1 - (sse/sst)
adjr2 = (1 - (1 - r2) * (n - 1)/(nrow(x) - nvar - 1))
crit=switch(crit,bic=bic,aic=aic,aicc=aicc,hqc=hqc)
selected=best.model = which(crit == min(crit))
ic=c(bic=bic[selected],aic=aic[selected],aicc=aicc[selected],hqc=hqc[selected])
result=list(coefficients=coef[,selected],ic=ic,lambda = lambda[selected], nvar=nvar[selected],
glmnet=model,residuals=residuals[,selected],fitted.values=yhat[,selected],ic.range=crit, df = df, call = match.call())
class(result)="ic.glmnet"
return(result)
}
iclasso <- ic.glmnet(X1, Y1, crit="bic", alpha=1)
lasso <- glmnet(X1, Y1, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew1), s=iclasso$lambda)
View(dataYlag1)
Y1[492]
MSELASSO = (Yobs1 - pred)^2
MSELASSO
Yobs1 - pred
a=100
#slice data
X1 <- dataXlag1[(a+3):(a+rolling_window-1 +3),]
Y1 <- dataYlag1[(a+3):(a+rolling_window-1 +3),]
Xnew1 <- dataXlag1[(a+rolling_window-1 +3 + 1),]
Yobs1 <- dataYlag1[(a+rolling_window-1 +3 +1),]
View(X1)
View(dataXlag1)
View(dataYlag1)
Y1[491]
Y1[492]
Y1[493]
Y1[492]
View(Xnew1)
iclasso <- ic.glmnet(X1, Y1, crit="bic", alpha=1)
lasso <- glmnet(X1, Y1, alpha=1)
pred = predict(lasso, newx = data.matrix(Xnew1), s=iclasso$lambda)
MSELASSO = (Yobs1 - pred)^2
a
pred
MSELASSO
View(datalag1)
datalag1 <- data %>% select(-c(date))
datalag2 <- data %>% select(-c(date))
datalag3 <- data %>% select(-c(date))
datalag4 <- data %>% select(-c(date))
for (col_name in names(data)) {
lvar1 <- lag(data[[col_name]], 1) ;lvar2 <- lag(data[[col_name]], 2); lvar3 <- lag(data[[col_name]], 3); lvar4 <- lag(data[[col_name]], 4)
colnamelag1 <- paste0(col_name, "_lag1"); colnamelag2 <- paste0(col_name, "_lag2"); colnamelag3 <- paste0(col_name, "_lag3"); colnamelag4 <- paste0(col_name, "_lag4")
datalag1[colnamelag1] <- lvar1
datalag2[colnamelag1] <- lvar1 ; datalag2[colnamelag2] <- lvar2
datalag3[colnamelag1] <- lvar1 ; datalag3[colnamelag2] <- lvar2; datalag3[colnamelag3] <- lvar3
datalag4[colnamelag1] <- lvar1 ; datalag4[colnamelag2] <- lvar2; datalag4[colnamelag3] <- lvar3 ; datalag4[colnamelag4] <- lvar4
}
View(datalag1)
datalag1$RPI[1:4]
View(datalag4)
View(data)
MSE_LASSO <- data.frame (date = data0$sasdate[(length(data0$sasdate)-256):length(data0$sasdate)],
nolag=numeric((nrow(dataYlag4) - rolling_window)),
lag1 = numeric((nrow(dataYlag4) - rolling_window)),
lag2 = numeric((nrow(dataYlag4) - rolling_window)),
lag3 = numeric((nrow(dataYlag4) - rolling_window)),
lag4 = numeric((nrow(dataYlag4) - rolling_window)))
fcst_LASSO <-  data.frame (date = data0$sasdate[(length(data0$sasdate)-256):length(data0$sasdate)],
nolag= numeric((nrow(dataYlag4) - rolling_window)),
lag1 = numeric((nrow(dataYlag4) - rolling_window)),
lag2 = numeric((nrow(dataYlag4) - rolling_window)),
lag3 = numeric((nrow(dataYlag4) - rolling_window)),
lag4 = numeric((nrow(dataYlag4) - rolling_window)))
datanolag <- data %>% select(-c(date))
datanolag <- datanolag[5:753]
datanolag <- datanolag[5:753,]
View(datanolag)
Xnolag <- datanolag %>% select(-c(CPIAUCSL))
Ynolag <- datanolag %>% select(CPIAUCSL)
for(a in 1:258){
iclasso <- ic.glmnet(Xnolag[a:(a+491),], Ynolag[a:(a+491),], crit="bic", alpha=1)
lasso <- glmnet(Xnolag[a:(a+491),], Ynolag[a:(a+491),], alpha=1)
pred = predict(lasso, new = data.matrix(Xnolag[a+492,]), s=iclasso$lambda)
MSELASSO = (Ynolag[a+493,] -pred)^2
MSE_LASSO$nolag[a] <- MSELASSO
fcst_LASSO$nolag[a]<- pred
}
for(a in 1:257){
iclasso <- ic.glmnet(Xnolag[a:(a+491),], Ynolag[a:(a+491),], crit="bic", alpha=1)
lasso <- glmnet(Xnolag[a:(a+491),], Ynolag[a:(a+491),], alpha=1)
pred = predict(lasso, newx = data.matrix(Xnolag[a+492,]), s=iclasso$lambda)
MSELASSO = (Ynolag[a+492,] -pred)^2
MSE_LASSO$nolag[a] <- MSELASSO
fcst_LASSO$nolag[a]<- pred
}
View(MSE_LASSO)
MSE_LASSO <- MSE_LASSO %>% mutate(nolagcum = cumsum(nolag)
lag1cum = cumsum(lag1),
MSE_LASSO <- MSE_LASSO %>% mutate(nolagcum = cumsum(nolag),
lag1cum = cumsum(lag1),
lag2cum = cumsum(lag2),
lag3cum = cumsum(lag3),
lag4cum = cumsum(lag4))
MSE_LASSO$date <- as.Date(MSE_LASSO$date, format = "%m/%d/%Y")
MSE_LASSO %>% ggplot(aes(x = date)) +
geom_line(aes(y = lag1cum, color = "1lag"), size = 1) +
geom_line(aes(y = lag2cum, color = "2lags"), size = 1) +
geom_line(aes(y = lag3cum, color = "3lags"), size = 1) +
geom_line(aes(y = lag4cum, color = "4lags"), size = 1) +
labs(x = "Date", y = "MSE", title = "Cumulative MSE - LASSO diff lags") +
scale_color_manual(values = c("1lag" = "blue", "2lags" = "red", "3lags" = "green", "4lags" = "yellow")) +
theme_minimal()
MSE_LASSO %>% ggplot(aes(x = date)) +
geom_line(aes(y = nolagcum, color = "no lag"), size = 1) +
geom_line(aes(y = lag1cum, color = "1lag"), size = 1) +
geom_line(aes(y = lag2cum, color = "2lags"), size = 1) +
geom_line(aes(y = lag3cum, color = "3lags"), size = 1) +
geom_line(aes(y = lag4cum, color = "4lags"), size = 1) +
labs(x = "Date", y = "MSE", title = "Cumulative MSE - LASSO diff lags") +
scale_color_manual(values = c("no lag" = "black", "1lag" = "blue", "2lags" = "red", "3lags" = "green", "4lags" = "yellow")) +
theme_minimal()
View(dataXlag1)
dataXlag1$date
#RW
rolling_window <- 492
#Create dataframes with lags
datalag1 <- data %>% select(-c(date))
datalag2 <- data %>% select(-c(date))
datalag3 <- data %>% select(-c(date))
datalag4 <- data %>% select(-c(date))
for (col_name in names(data)) {
lvar1 <- lag(data[[col_name]], 1) ;lvar2 <- lag(data[[col_name]], 2); lvar3 <- lag(data[[col_name]], 3); lvar4 <- lag(data[[col_name]], 4)
colnamelag1 <- paste0(col_name, "_lag1"); colnamelag2 <- paste0(col_name, "_lag2"); colnamelag3 <- paste0(col_name, "_lag3"); colnamelag4 <- paste0(col_name, "_lag4")
datalag1[colnamelag1] <- lvar1
datalag2[colnamelag1] <- lvar1 ; datalag2[colnamelag2] <- lvar2
datalag3[colnamelag1] <- lvar1 ; datalag3[colnamelag2] <- lvar2; datalag3[colnamelag3] <- lvar3
datalag4[colnamelag1] <- lvar1 ; datalag4[colnamelag2] <- lvar2; datalag4[colnamelag3] <- lvar3 ; datalag4[colnamelag4] <- lvar4
}
datalag1 <- na.omit(datalag1) ; dataXlag1 <- datalag1 %>% select(-c(CPIAUCSL)) ; dataYlag1 <- datalag1 %>% select(CPIAUCSL)
datalag2 <- na.omit(datalag2) ; dataXlag2 <- datalag2 %>% select(-c(CPIAUCSL)) ; dataYlag2 <- datalag2 %>% select(CPIAUCSL)
datalag3 <- na.omit(datalag3) ; dataXlag3 <- datalag3 %>% select(-c(CPIAUCSL)) ; dataYlag3 <- datalag3 %>% select(CPIAUCSL)
datalag4 <- na.omit(datalag4) ; dataXlag4 <- datalag4 %>% select(-c(CPIAUCSL)) ; dataYlag4 <- datalag4 %>% select(CPIAUCSL)
View(dataXlag1)
dataXlag1$date
View(dataXlag1)
#RW
rolling_window <- 492
#Create dataframes with lags
datalag1 <- data %>% select(-c(date))
datalag2 <- data %>% select(-c(date))
datalag3 <- data %>% select(-c(date))
datalag4 <- data %>% select(-c(date))
for (col_name in names(data)) {
lvar1 <- lag(data[[col_name]], 1) ;lvar2 <- lag(data[[col_name]], 2); lvar3 <- lag(data[[col_name]], 3); lvar4 <- lag(data[[col_name]], 4)
colnamelag1 <- paste0(col_name, "_lag1"); colnamelag2 <- paste0(col_name, "_lag2"); colnamelag3 <- paste0(col_name, "_lag3"); colnamelag4 <- paste0(col_name, "_lag4")
datalag1[colnamelag1] <- lvar1
datalag2[colnamelag1] <- lvar1 ; datalag2[colnamelag2] <- lvar2
datalag3[colnamelag1] <- lvar1 ; datalag3[colnamelag2] <- lvar2; datalag3[colnamelag3] <- lvar3
datalag4[colnamelag1] <- lvar1 ; datalag4[colnamelag2] <- lvar2; datalag4[colnamelag3] <- lvar3 ; datalag4[colnamelag4] <- lvar4
}
datalag1 <- na.omit(datalag1) ; dataXlag1 <- datalag1 %>% select(-c(CPIAUCSL)) ; dataYlag1 <- datalag1 %>% select(CPIAUCSL)
datalag2 <- na.omit(datalag2) ; dataXlag2 <- datalag2 %>% select(-c(CPIAUCSL)) ; dataYlag2 <- datalag2 %>% select(CPIAUCSL)
datalag3 <- na.omit(datalag3) ; dataXlag3 <- datalag3 %>% select(-c(CPIAUCSL)) ; dataYlag3 <- datalag3 %>% select(CPIAUCSL)
datalag4 <- na.omit(datalag4) ; dataXlag4 <- datalag4 %>% select(-c(CPIAUCSL)) ; dataYlag4 <- datalag4 %>% select(CPIAUCSL)
View(dataXlag1)
#Create dataframes with lags
datalag1 <- data %>% select(-c(date))
datalag2 <- data %>% select(-c(date))
datalag3 <- data %>% select(-c(date))
datalag4 <- data %>% select(-c(date))
View(datalag1)
dataleg1$date
datalag1$date
for (col_name in names(datalag1)) {
lvar1 <- lag(data[[col_name]], 1) ;lvar2 <- lag(data[[col_name]], 2); lvar3 <- lag(data[[col_name]], 3); lvar4 <- lag(data[[col_name]], 4)
colnamelag1 <- paste0(col_name, "_lag1"); colnamelag2 <- paste0(col_name, "_lag2"); colnamelag3 <- paste0(col_name, "_lag3"); colnamelag4 <- paste0(col_name, "_lag4")
datalag1[colnamelag1] <- lvar1
datalag2[colnamelag1] <- lvar1 ; datalag2[colnamelag2] <- lvar2
datalag3[colnamelag1] <- lvar1 ; datalag3[colnamelag2] <- lvar2; datalag3[colnamelag3] <- lvar3
datalag4[colnamelag1] <- lvar1 ; datalag4[colnamelag2] <- lvar2; datalag4[colnamelag3] <- lvar3 ; datalag4[colnamelag4] <- lvar4
}
datalag1 <- na.omit(datalag1) ; dataXlag1 <- datalag1 %>% select(-c(CPIAUCSL)) ; dataYlag1 <- datalag1 %>% select(CPIAUCSL)
datalag2 <- na.omit(datalag2) ; dataXlag2 <- datalag2 %>% select(-c(CPIAUCSL)) ; dataYlag2 <- datalag2 %>% select(CPIAUCSL)
datalag3 <- na.omit(datalag3) ; dataXlag3 <- datalag3 %>% select(-c(CPIAUCSL)) ; dataYlag3 <- datalag3 %>% select(CPIAUCSL)
datalag4 <- na.omit(datalag4) ; dataXlag4 <- datalag4 %>% select(-c(CPIAUCSL)) ; dataYlag4 <- datalag4 %>% select(CPIAUCSL)
View(MSE_LASSO)
for(a in 1:257){
iclasso <- ic.glmnet(dataXlag1[a:(a+491),], dataYlag1[a:(a+491),], crit="bic", alpha=1)
lasso <- glmnet(dataXlag1[a:(a+491),], dataYlag1[a:(a+491),], alpha=1)
pred = predict(lasso, newx = data.matrix(dataXlag1[a+492,]), s=iclasso$lambda)
MSELASSO = (dataYlag1[a+492,] -pred)^2
MSE_LASSO$nolag[a] <- MSELASSO
fcst_LASSO$nolag[a]<- pred
}
#Evaluate cumulative mean squared errors
MSE_LASSO <- MSE_LASSO %>% mutate(nolagcum = cumsum(nolag),
lag1cum = cumsum(lag1),
lag2cum = cumsum(lag2),
lag3cum = cumsum(lag3),
lag4cum = cumsum(lag4))
MSE_LASSO$date <- as.Date(MSE_LASSO$date, format = "%m/%d/%Y")
MSE_LASSO %>% ggplot(aes(x = date)) +
geom_line(aes(y = nolagcum, color = "no lag"), size = 1) +
geom_line(aes(y = lag1cum, color = "1lag"), size = 1) +
geom_line(aes(y = lag2cum, color = "2lags"), size = 1) +
geom_line(aes(y = lag3cum, color = "3lags"), size = 1) +
geom_line(aes(y = lag4cum, color = "4lags"), size = 1) +
labs(x = "Date", y = "MSE", title = "Cumulative MSE - LASSO diff lags") +
scale_color_manual(values = c("no lag" = "black", "1lag" = "blue", "2lags" = "red", "3lags" = "green", "4lags" = "yellow")) +
theme_minimal()
View(MSE_LASSO)
#Evaluate cumulative mean squared errors
datanolag <- data %>% select(-c(date))
datanolag <- datanolag[5:753,]
Xnolag <- datanolag %>% select(-c(CPIAUCSL))
Ynolag <- datanolag %>% select(CPIAUCSL)
for(a in 1:257){
iclasso <- ic.glmnet(Xnolag[a:(a+491),], Ynolag[a:(a+491),], crit="bic", alpha=1)
lasso <- glmnet(Xnolag[a:(a+491),], Ynolag[a:(a+491),], alpha=1)
pred = predict(lasso, newx = data.matrix(Xnolag[a+492,]), s=iclasso$lambda)
MSELASSO = (Ynolag[a+492,] -pred)^2
MSE_LASSO$nolag[a] <- MSELASSO
fcst_LASSO$nolag[a]<- pred
}
#Evaluate cumulative mean squared errors - 1lag
for(a in 1:257){
iclasso <- ic.glmnet(dataXlag1[a:(a+491),], dataYlag1[a:(a+491),], crit="bic", alpha=1)
lasso <- glmnet(dataXlag1[a:(a+491),], dataYlag1[a:(a+491),], alpha=1)
pred = predict(lasso, newx = data.matrix(dataXlag1[a+492,]), s=iclasso$lambda)
MSELASSO = (dataYlag1[a+492,] -pred)^2
MSE_LASSO$lag1[a] <- MSELASSO
fcst_LASSO$lag1[a]<- pred
}
#Evaluate cumulative mean squared errors
MSE_LASSO <- MSE_LASSO %>% mutate(nolagcum = cumsum(nolag),
lag1cum = cumsum(lag1),
lag2cum = cumsum(lag2),
lag3cum = cumsum(lag3),
lag4cum = cumsum(lag4))
MSE_LASSO$date <- as.Date(MSE_LASSO$date, format = "%m/%d/%Y")
MSE_LASSO %>% ggplot(aes(x = date)) +
geom_line(aes(y = nolagcum, color = "no lag"), size = 1) +
geom_line(aes(y = lag1cum, color = "1lag"), size = 1) +
geom_line(aes(y = lag2cum, color = "2lags"), size = 1) +
geom_line(aes(y = lag3cum, color = "3lags"), size = 1) +
geom_line(aes(y = lag4cum, color = "4lags"), size = 1) +
labs(x = "Date", y = "MSE", title = "Cumulative MSE - LASSO diff lags") +
scale_color_manual(values = c("no lag" = "black", "1lag" = "blue", "2lags" = "red", "3lags" = "green", "4lags" = "yellow")) +
theme_minimal()
View(MSE_LASSO)
MSE_LASSO(lag1cum$257)
MSE_LASSO$lag1cum[257]
View(dataXlag1)
View(data)
View(dataXlag1)
View(dataXlag4)
View(datalag4)
dataXlag4
teste <- dataXlag4 %>% select(c(RPI, RPI_lag1, RPI_lag2, RPI_lag3, RPI_lag4))
View(teste)
